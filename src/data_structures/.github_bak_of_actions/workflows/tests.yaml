name: Run tests

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:

  gcc_ubuntu:

    runs-on: ubuntu-22.04

    strategy:
      matrix:
        gcc_v: [9, 10, 11, 12]
        # gcc_v: [9]
      fail-fast: false

    env:
      GCC_V: ${{ matrix.gcc_v }}

    steps:

      - uses: actions/checkout@v3

      # no needs to install !
      #
      # - name: GCC - Install
      #   run: |
      #     sudo add-apt-repository ppa:ubuntu-toolchain-r/test
      #     sudo apt-get update
      #     sudo apt-get install -y gcc-${GCC_V} gfortran-${GCC_V} g++-${GCC_V}
      #     sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_V} 100 \
      #     --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_V} \
      #     --slave /usr/bin/g++      g++      /usr/bin/g++-${GCC_V} \
      #     --slave /usr/bin/gcov     gcov     /usr/bin/gcov-${GCC_V}


      # Unity and Module tests - DEBUG type
      - name: Compile Unity and Modular Tests - DEBUG mode = g, O0, Wall, checkall
        run: |
          make clean
          make
              
        # default make is debug -Og -Wall -fcheck=all, generates Unity_tests_debug, Modular_tests_debug
      - name: Run Unity Tests - DEBUG mode
        run: |
          make runUnityTest

      - name: Run Modular Tests - DEBUG mode
        run: |
          make runModularTest


      # Performance steps of Modular Tests
      # default make is debug -Og -Wall -fcheck=all, generates Unity_tests_debug, Modular_tests_debug
      - name: Compile Tests Unity and Module - Performance mode = O3
        run: |
          make clean
          FFLAGS=-O3 UNITY_TESTS_APP_NAME=Unity_tests_O3 MODULAR_TESTS_APP_NAME=Modular_tests_O3 make
      
      - name: Run Unity Tests - Performance mode
        run: |
          UNITY_TESTS_APP_NAME=Unity_tests_O3 make runUnityTest

      - name: Run Modular Tests - Performance mode
        run: |
          MODULAR_TESTS_APP_NAME=Modular_tests_O3 make runModularTest